$PREF: 't-main';

// ## HEADER - Makes the header consistent across each page. Mainly for loading
// purposes. However, each page should implement their own positioning whether
// it is grid-based or flex-based.

.#{$PREF}-header {
  background-color: $gray-6;
  margin-left: -$xxs;
  margin-right: -$xxs;
  padding: $md $xxs;
  position: sticky;
  top: 0;
  z-index: 11;
}

.#{$PREF}-header > .t-row {
  > div:first-child > .c-tag-number ~ .c-spinner { margin-left: $xs; }

  > div:first-child > button:first-of-type > svg {
    @extend .react-icon--xl;
  
    border-radius: 50%;
    margin-right: $sm;
    padding: 2px;
  
    @include HOVER {
      background-color: rgba($color: $primary-hex, $alpha: 0.15);
    }
  }

  > div:last-child:not(:first-child) {
    min-width: 15%;

    @include MT { display: none; }
    > * { margin-left: auto; }
  }
}

// ## MAIN CONTENT

.#{$PREF}-content {
  margin: 0 $md;
  padding: 2px 2px $xl * 2 2px; // 2px for box-shadow to show properly.

  @include M { margin: 0 $sm; }
}

// ## MAIN HAMBURGER

.#{$PREF}-hamburger {
  margin-bottom: $sm;

  @include D { display: none; }
  > button > svg { @extend .react-icon--lg; }
}

// ## MAIN SECTION

.#{$PREF}-section { margin-bottom: $md; }
.#{$PREF}-section > .t-loading-header { margin-bottom: $sm; }

// ## NAV BUTTON - Only use a border-top, border-bottom and border-right, but
// not border-left, so we avoid stacking pixels (1px * 2 = 2px). However,
// the first button will have a border-left.

.#{$PREF}-nav {
  @extend .meta--lg;
  
  background-color: inherit;
  border: 1px $primary solid;
  border-left: none;
  border-radius: 0;
  color: $primary;
  padding: $xs $sm;
  
  &--active { background-color: $primary; color: white; }

  &:first-child {
    border-left: 1px $primary solid;
    border-radius: $xxs 0 0 $xxs;
  }

  &:last-child { border-radius: 0 $xxs $xxs 0; }

  // Disables the scaling transition that all buttons typically have.
  &:active { transform: none; transition: none; }
}
