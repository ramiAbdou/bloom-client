/*
  ___              _             _     _
 | _ )_ _ ___ __ _| |___ __  ___(_)_ _| |_ ___
 | _ \ '_/ -_) _` | / / '_ \/ _ \ | ' \  _(_-<
 |___/_| \___\__,_|_\_\ .__/\___/_|_||_\__/__/
                      |_|
*/

// Controls all of the @media queries based on the window width. Mixin
// functions allow for setting breakpoints at various widths.

$SMALLEST_SCREEN: 320px;

$screen-mobile: 575;
$screen-tablet: 1024;
$screen-desktop: 1440;

// If the size of the screen is less than 575px.

@mixin M {
  @media (max-width: "#{$screen-mobile}px") {
    @content;
  }
}

// If the size of the screen is less than 1024px.

@mixin MT {
  @media (max-width: "#{$screen-tablet}px") {
    @content;
  }
}

// If the size of the screen is between 576px and 1024px.

@mixin T {
  @media all
    and (min-width: "#{$screen-mobile + 1}px")
    and (max-width: "#{$screen-tablet}px") {
    @content;
  }
}

// If the size of the screen is at least 576px.

@mixin TD {
  @media (min-width: "#{$screen-mobile + 1}px") {
    @content;
  }
}

// If the size of the screen is at least 1025px...

@mixin D {
  @media (min-width: "#{$screen-tablet + 1}px") {
    @content;
  }
}

// If the size of the screen is at least 1441px...

@mixin DD {
  @media (min-width: "#{$screen-desktop + 1}px") {
    @content;
  }
}
@mixin WW($comparator, $window-width) {
  @if $comparator== 'GT' {
    @media (min-width: "#{$window-width + 1}px") {
      @content;
    }
  }
  @else if $comparator== 'GTE' {
    @media (min-width: "#{$window-width}px") {
      @content;
    }
  }
  @else if $comparator== 'LT' {
    @media (max-width: "#{$window-width - 1}px") {
      @content;
    }
  }
  @else if $comparator== 'LTE' {
    @media (max-width: "#{$window-width}px") {
      @content;
    }
  }
}
@mixin resp($rule, $desktop-val, $tablet-val, $mobile-val) {
  @include D {
    #{$rule}: $desktop-val;
  }
  @include T {
    #{$rule}: $tablet-val;
  }
  @include M {
    #{$rule}: $mobile-val;
  }
}
