// Although we typically follow the pattern of naming the $PREF based on the
// file name, since we have a lot of elements that already use the c-misc
// prefix, we keep that here.

$PREF: 'c-misc';

// ## SEACH BAR - Similar to the input element except contains a search SVG
// icon, and this bar is rounded and darker gray with no focused state.

.#{$PREF}-search {
  @extend .flex-ac;

  background-color: $gray-5;
  border-radius: $sl;
  box-sizing: border-box;
  color: $gray-3;
  padding: $xs $sm;
  width: $xxl * 5;
}

.#{$PREF}-search > svg {
  color: $gray-3;
  margin-right: $xs;
  min-height: $sm;
  min-width: $sm;
}

.#{$PREF}-search > input {
  background-color: inherit;
  flex-grow: 1;
  width: 100%;

  &::selection { background-color: rgba($color: $primary-hex, $alpha: 0.2); }
}

.#{$PREF}-search-close {
  color: $gray-3;

  &--hide { visibility: hidden; }

  > svg { color: $gray-3; min-height: $sl; min-width: $sl; }
}

// ## QUESTION VALUE - Has a title component and value component.

.#{$PREF}-question:not(:last-child) { margin-bottom: $sm; }
.#{$PREF}-question > p:first-child { @extend .body--bold; margin-bottom: $xs; }
.#{$PREF}-question > div:last-child { @extend .flex-w; }

// ## RADIO

input[type="radio"] {
  border-radius: 50%;
  cursor: pointer;
  display: inline-block;
  height: $md;
  opacity: 0;
  position: absolute;
  width: $lg;
}

input[type="radio"] ~ div {
  @extend .flex-acc;
  
  background-color: white;
  border: 2px solid $gray-4;
  border-radius: 50%;
  height: $ss;
  margin-right: $xs;
  padding: 2px;
  width: $ss;
}

input[type="radio"] ~ div > span { @extend .fill; }

input[type="radio"]:checked ~ div,
input[type="radio"]:hover ~ div { border-color: $primary; }

input[type="radio"]:checked ~ div > span {
  background-color: $primary;
  border-radius: 50%;
  display: inline-block;
  min-height: $ss;
  min-width: $ss;
}

.#{$PREF}-radio {
  @extend .flex-col; 
  > div { @extend .flex-ac; cursor: pointer; width: fit-content; }
  > div:not(:last-child) { margin-bottom: $xs; }
  > div > * { cursor: pointer; }
}
