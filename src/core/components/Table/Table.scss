$PREF: 'c-table';

// ## TABLE CONTAINER

##{$PREF}-ctr {
  background-color: white;
  border: 1px $gray-5 solid;
  border-radius: $xs;
  overflow: scroll;
  position: relative;
}

// ## TABLE CONTENT

.#{$PREF} {
  border-collapse: collapse;
  border-spacing: $xs $xxs;
  height: fit-content;
  min-width: 100%;
  transform: rotateX(0deg);
  width: max-content;
}

// ## TABLE DATA ROW

tbody > tr {
  cursor: pointer;

  @include HOVER {
    box-shadow: 0 0 8px 2px hsla($primary-hue, 99%, 17%, 0.15);
    position: relative;
    transform: scale(1); // Required to push to higher stacking context.
    z-index: 10;
  }

  &:not(:last-child) { border-bottom: 1px $gray-5 solid; }
}

// Applied if the table row is selected.
tr.#{$PREF}-tr--active { > td { background-color: $primary-hover; } }

// ## TABLE CELL (BOTH TH AND TD)

.#{$PREF}-cell {
  left: 0;
  margin: 0;
  padding: $sm $md $sm $sm;
  position: sticky;
  text-align: left;

  &--sm { max-width: $xxl * 3.25; width: $xxl * 3.25; }
  &--md { max-width: $xxl * 4; width: $xxl * 4; }
  &--lg { max-width: $xxl * 5; width: $xxl * 5; }

  &:first-child > div { @extend .flex-ac; max-width: 100%; }
  &:last-child { width: -webkit-fill-available; }
}

// ## TABLE DATA CELL

td {
  @extend .#{$PREF}-cell;

  background-color: white;
  color: $gray-1;
  vertical-align: top;

  > div > .c-misc-checkbox { z-index: 10; }
  > div > p { @include OVERFLOW_ELLIPSES(3); }
  > div > .c-misc-tag { margin: 0 $xxs $xxs 0; }

  // The first data cell has higher z-index than rest of td cells to have
  // horizontal scrolling hide the other cells under this first one.
  &:first-of-type { z-index: 9; }

  &:first-of-type::after {
    border-right: 1px solid $gray-5;
    content: '';
    height: 100%;
    left: -1px;
    position: absolute;
    top: 0;
    width: 100%;
  }
}

td.#{$PREF}-td--multiple-select > div { @extend .flex-w; }

// ## TABLE HEADER CELL

th {
  @extend .#{$PREF}-cell;
  @extend .meta--lg;

  background-color: $gray-6;
  cursor: pointer;
  top: 0;
  vertical-align: middle;
  z-index: 11;

  @include HOVER { background-color: $gray-5; cursor: pointer; }

  // Header select option should have a darker border and higher z-index.
  > div > .c-misc-checkbox { border: 1px $gray-3 solid; z-index: 12; }

  // The header title content.
  > div > h4 {
    color: $gray-3;

    @include OVERFLOW_ELLIPSES;
  }

  // The first header cell has higher z-index than rest of th cells to have
  // horizontal scrolling hide the other cells  under this first one.
  &:first-of-type { z-index: 12; }

  // We need to make the border bottom and border right position absolute to
  // achieve the scrolling functionality that we want.
  &::after {
    border-bottom: 1px solid $gray-5;
    border-right: 1px solid $gray-5;
    bottom: 0;
    content: '';
    height: 100%;
    left: -1px;
    position: absolute;
    top: 0;
    width: 100%;
  }
}

th.#{$PREF}-th--sorted {
  > div { @extend .flex-ac; }
  > div > h4 { color: $primary; max-width: 85%; }
  // Caret up or caret down SVG, React controls the displaying of this element.
  > div > svg { color: $primary; height: $ss; margin-left: $xs; width: $ss; }
}

// When the picker is showing, we keep the background-color dark.
th.#{$PREF}-th--picker { background-color: $gray-5; }

// ## SELECT CHECKBOX - The HTML applied the .c-misc-checkbox class, we don't
// extend it in here for overriding purposes of the margin and background-color.

.#{$PREF}-select { background-color: white; margin: 0 $lg 0 0; }

// ## PAGINATION - Controls all of the table pagination by selecting different
// pages. Also controls the displaying text of which rows are being shown.

.#{$PREF}-pagination-ctr { @extend .flex-acsb; margin-top: $sm; }
.#{$PREF}-pagination-row { @extend .flex-ac; }
.#{$PREF}-pagination-num {
  border-radius: 50%;
  padding: 2px $xs;

  @include HOVER { background-color: rgba($color: $primary-hex, $alpha: 0.15); }

  &:not(:last-child) { margin-right: $xxs; }

  &--active {
    background-color: $primary;
    color: white;

    @include HOVER { background-color: $primary; color: white; }
  }

  &--ellipses { @include HOVER { background-color: initial; cursor: default; } }
}

.#{$PREF}-pagination-chevron {
  border-radius: 50%;
  padding: 2px;

  @include HOVER { background-color: rgba($color: $primary-hex, $alpha: 0.15); }

  &:first-child { margin-right: $xs; }
  &:last-child { margin-left: $xs; }
}

// ## SELECTED BANNER

.#{$PREF}-banner {
  @extend .flex-acc;
  @extend .shadow--1;

  background-color: white;
  border-radius: $xs;
  margin-bottom: $xs;
  padding: $xs 0;
}

.#{$PREF}-banner > p { margin-right: $sm; }
.#{$PREF}-banner > p > span { font-weight: 700; }

// ## COLUMN PICKER

// Added a div before the name to make it take higher precedence.
div.#{$PREF}-col-picker { padding: $sm; }
.#{$PREF}-col-picker > input { margin-bottom: $sm; }
.#{$PREF}-col-picker > button {
  @extend .flex-ac;

  justify-content: left;
  padding: $xxs 0;
  width: 100%;

  @include PRIMARY_HOVER;
}

.#{$PREF}-col-picker > button:first-of-type { margin-bottom: $xs; }

.#{$PREF}-col-picker > button > svg { margin-right: $xs; }
.#{$PREF}-col-picker > button > p { @extend .body--bold; }

.#{$PREF}-col-picker-button--active > svg,
.#{$PREF}-col-picker-button--active > p { color: $primary; }
