$PREF: 'c-btn';

// ## BASIC BUTTON

.#{$PREF} {
  @extend .flex-acc;
  
  border-radius: $xxs;

  &:not(:disabled) {
    @include HOVER { opacity: 0.8; }
    &:active { transform: scale(0.95); transition: transform 0.1s ease-out; }
  }

  &:disabled { color: white; cursor: not-allowed; }

  // Maps to the "fill" prop passed into the Button component.
  &--fill { width: 100%; }
  &--fit { width: fit-content; }

  // Maps to the "large" prop passed into the Button component.
  &--lg { height: $xl; }
}

// ## LOADING STATE - Includes the loading text as well as the Spinner.

.#{$PREF}-loading-ctr { @extend .flex-acc; }
.#{$PREF}-loading-ctr > p {
  @extend .meta--lg;

  color: white;
  margin-right: $sm;
}

// ## PRIMARY BUTTON

.#{$PREF}-primary {
  @extend .meta--lg;

  background-color: $primary;
  border: 1px $primary solid;
  color: white;
  padding: $xs $sm;

  &:disabled {
    background-color: $gray-5;
    border: 1px $gray-5 solid;
    color: $gray-3;
  }
}

// ## OUTLINE BUTTON

.#{$PREF}-outline {
  @extend .meta--lg;

  background-color: inherit;
  border: 1px $primary solid;
  color: $primary;
  padding: $xs $sm;
}

// ## UNDERLINE BUTTON

.#{$PREF}-underline {
  @extend .meta--lg;

  color: $primary;
  padding: $xs $sm;
  text-decoration: underline;
  
  @include PRIMARY_HOVER;
  @include HOVER { border-radius: $xxs; }
}

// ## MULTI BUTTON - Only use a border-top, border-bottom and border-right, but
// not border-left, so we avoid stacking pixels (1px * 2 = 2px). However,
// the first button will have a border-left.

.#{$PREF}-multi-ctr { @extend .flex-ac; }

.#{$PREF}-multi {
  @extend .meta--lg;
  
  background-color: inherit;
  border: 1px $primary solid;
  border-left: none;
  border-radius: 0;
  color: $primary;
  padding: $xs $sm;
  
  &--active { background-color: $primary; color: white; }

  &:first-child {
    border-left: 1px $primary solid;
    border-radius: $xxs 0 0 $xxs;
  }

  &:last-child { border-radius: 0 $xxs $xxs 0; }

  // Disables the scaling transition that all buttons typically have.
  &:active { transform: none; transition: none; }
}
